{"version":3,"sources":["components/Header.js","components/JoinCallForm.js","components/InviteForm.js","components/Video.js","components/Select.js","components/Events.js","components/Invite.js","components/Partcipants.js","components/SplitButton.js","pages/InCall.js","App.js","index.js"],"names":["Header","Navbar","Container","Brand","href","src","className","style","width","alt","Toggle","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","JoinCallForm","onJoin","useState","name","setName","room","setRoom","Row","Col","lg","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","type","placeholder","onChange","target","value","pattern","required","Button","variant","onClick","alert","roomName","mod","joinAsGuest","setJoinAsGuest","Check","label","checked","console","log","SERVERLOCATION","Video","joinDetails","roomDetails","onRoomInit","onRoomUpdate","onMemberListUpdate","eventLogger","isLoading","setIsLoading","setupDone","setSetupDone","thisMemberId","useRef","memberList","screen","useScreenSize","useEffect","a","token","axios","post","user_name","room_name","data","SignalWire","createRoomObject","rootElementId","video","connectEvents","join","getLayouts","layouts","getCameraDevicesWithPermissions","cameras","getMicrophoneDevicesWithPermissions","microphones","getSpeakerDevicesWithPermissions","speakers","connectDeviceWatchers","setup_room","styles","videoContainer","videoPlaceholder","minHeight","height","position","display","alignItems","justifyContent","background","color","on","current","member_id","members","thisMember","find","m","member","push","undefined","updatedMember","x","newMemberList","filter","layout","memberThatLeft","remainingMembers","left","createDeviceWatcher","targets","changes","devices","Select","items","map","i","Events","logQueue","setLogQueue","counter","l","index","text","ToastContainer","zIndex","Toast","autohide","delay","onClose","bg","Body","InviteButton","msg","generateLink","r","window","location","protocol","host","Dropdown","drop","Menu","tx","document","createElement","body","appendChild","select","execCommand","removeChild","Participants","onMemberUpdate","Card","ListGroup","padding","md","OverlayTrigger","placement","overlay","Tooltip","audio_muted","marginLeft","action","video_muted","SplitButtonMenu","muted","setMuted","muteIcon","unmuteIcon","deviceName","pickDevice","as","ButtonGroup","split","c","deviceId","InCall","size","history","useHistory","setLayouts","curLayout","setCurLayout","setCameras","setMicrophones","setSpeakers","screenShareObj","setScreenShareObj","event","setEvent","setThisMemberId","audioMuted","setAudioMuted","videoMuted","setVideoMuted","speakerMuted","setSpeakerMuted","setMemberList","setUpdateSignal","updateView","logEvent","useCallback","updatedValues","mem","deaf","fluid","backgroundColor","sm","xs","list","removeMember","memberId","videoMute","audioMute","audioUnmute","videoUnmute","fixed","marginTop","updateCamera","updateMicrophone","undeaf","updateSpeaker","leave","App","query","URLSearchParams","useLocation","search","setRoomDetails","path","to","get","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3e7a856.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nexport default function Header() {\n  return (\n    <>\n      <Navbar>\n        <Container>\n          <Navbar.Brand href=\"https://signalwire.com\">\n            <img\n              src=\"/swlogo.png\"\n              className=\"d-inline-block align-top\"\n              style={{ width: 180 }}\n              alt=\"SignalWire Logo\"\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"https://developer.signalwire.com\">\n                Developer's Portal\n              </Nav.Link>\n              <NavDropdown title=\"Tutorial\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/signalwire-communications-api\">\n                  Getting Started with the SignalWire Communications API\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/signing-up-for-a-space\">\n                  Your First SignalWire Space\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/getting-started-with-the-signalwire-video-api-1\">\n                  Getting Started with the SignalWire Video API\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n\n                <NavDropdown.Header>\n                  Making a Zoom clone with the SignalWire Video APIs\n                </NavDropdown.Header>\n\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/making-a-zoom-clone-with-signalwire-video-apis\">\n                  1. Overview\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/writing-a-backend-to-proxy-signalwire-video-rest-api\">\n                  2. Writing a backend to proxy SignalWire Video REST API\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/writing-a-basic-react-frontend\">\n                  3. A basic React frontend\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/working-with-microphones-cameras-and-speakers\">\n                  4. Working with microphones, cameras and speakers\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/changing-layouts\">\n                  5. Changing layouts\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/sharing-screen\">\n                  6. Screen sharing\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://developer.signalwire.com/apis/docs/moderator-controls\">\n                  7. Listing members and Moderator controls\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function JoinCallForm({ onJoin = () => {} }) {\n  let [name, setName] = useState(\"\");\n  let [room, setRoom] = useState(\"\");\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col lg={4} className=\"mt-5 mb-2\">\n          <h3>Join a Room</h3>\n          <Form onSubmit={(e) => e.preventDefault()}>\n            <Form.Group className=\"mb-3\" controlId=\"VideoCallName\">\n              <Form.Label>Your Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Your Name\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n                pattern=\"[^' ']+\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"VideoRoom\">\n              <Form.Label>Room Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Room Name\"\n                onChange={(e) => setRoom(e.target.value)}\n                value={room}\n                pattern=\"[^' ']+\"\n                required\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={() => {\n                if (name !== \"\" && room !== \"\") {\n                  onJoin({ name, room });\n                } else {\n                  alert(\n                    \"Please Fill all fields (todo use bootstrap alert or form error messages)\"\n                  );\n                }\n              }}\n            >\n              Join\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function JoinCallForm({\n  roomName,\n  onJoin = () => {},\n  mod = false,\n}) {\n  let [name, setName] = useState(\"\");\n  let [joinAsGuest, setJoinAsGuest] = useState(false);\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col lg={4}>\n          <h4>\n            Join '{roomName}'{mod && !joinAsGuest ? \" as moderator\" : \"\"}\n          </h4>\n          <Form onSubmit={(e) => e.preventDefault()}>\n            <Form.Group className=\"mb-3\" controlId=\"VideoCallName\">\n              <Form.Label>Your Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Your Name\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n                pattern=\"[^' ']+\"\n                required\n              />\n            </Form.Group>\n            {mod && (\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Please add me without moderator privileges\"\n                checked={joinAsGuest}\n                onChange={(e) => {\n                  setJoinAsGuest(e.target.checked);\n                  console.log(e.target.checked);\n                }}\n              />\n            )}\n            <Button\n              className=\"mt-1\"\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={() => {\n                if (name !== \"\") {\n                  onJoin({ name, room: roomName, mod: mod && !joinAsGuest });\n                } else {\n                  alert(\n                    \"Please Fill all fields (todo use bootstrap alert or form error messages)\"\n                  );\n                }\n              }}\n            >\n              Join\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport useScreenSize from \"use-screen-size\";\n\n// #### TODO Import SignalWire SDK\nimport * as SignalWire from \"@signalwire/js\";\n\n// This is the address to our own custom server.\n// We will interact with this server to ask for room tokens,\n// which our server will obtain from SignalWire's servers.\n// Find the code at https://codesandbox.io/s/lr3ti\nconst SERVERLOCATION = \"https://lr3ti.sse.codesandbox.io\";\n\nexport default function Video({\n  joinDetails: roomDetails = {\n    room: \"signalwire\",\n    name: \"John Doe\",\n    mod: true\n  },\n  onRoomInit = () => {},\n  onRoomUpdate = () => {},\n  onMemberListUpdate = () => {},\n  width = 400,\n  eventLogger = console.log\n}) {\n  let [isLoading, setIsLoading] = useState(\"true\");\n  let [setupDone, setSetupDone] = useState(false);\n  let thisMemberId = useRef(null);\n  let memberList = useRef([]);\n  let screen = useScreenSize();\n\n  useEffect(() => {\n    if (setupDone) return;\n    setup_room();\n    async function setup_room() {\n      setSetupDone(true);\n\n      // TODO\n      // #### 1. Get a token from our server, for the given room and username\n      let token = null;\n      token = await axios.post(SERVERLOCATION + \"/get_token\", {\n        user_name: roomDetails.name,\n        room_name: roomDetails.room,\n        mod: roomDetails.mod\n      });\n      token = token.data.token;\n      // #### 2. Obtain the reference to the room\n      let room = null;\n      room = await SignalWire.Video.createRoomObject({\n        token,\n        rootElementId: \"temp\",\n        video: true\n      });\n      // #### 3. Connect events\n\n      connectEvents({\n        room,\n        thisMemberId,\n        memberList,\n        onMemberListUpdate,\n        onRoomUpdate,\n        eventLogger\n      });\n\n      // #### 4. Join the room\n      await room.join();\n\n      // #### 5. Obtain the list of layouts and devices\n\n      let layouts = roomDetails.mod ? (await room.getLayouts()).layouts : [];\n      let cameras = await SignalWire.WebRTC.getCameraDevicesWithPermissions();\n      let microphones = await SignalWire.WebRTC.getMicrophoneDevicesWithPermissions();\n      let speakers = await SignalWire.WebRTC.getSpeakerDevicesWithPermissions();\n\n      setIsLoading(false);\n      onRoomInit(room, layouts, cameras, microphones, speakers);\n\n      // #### 6. Connect device watchers\n      await connectDeviceWatchers({ onRoomUpdate, eventLogger });\n    }\n  }, [\n    roomDetails,\n    eventLogger,\n    onMemberListUpdate,\n    onRoomInit,\n    onRoomUpdate,\n    setupDone\n  ]);\n\n  return (\n    <div style={styles.videoContainer}>\n      {isLoading && (\n        <div\n          style={{ ...styles.videoPlaceholder, minHeight: 0.5 * screen.height }}\n        >\n          Loading ...\n        </div>\n      )}\n      <div\n        id=\"temp\"\n        style={{\n          width,\n          minHeight: 0.5 * screen.height\n        }}\n      ></div>\n    </div>\n  );\n}\n\nconst styles = {\n  videoContainer: {\n    position: \"relative\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  videoPlaceholder: {\n    position: \"absolute\",\n    background: \"rgba(0,0,0,0.5)\",\n    color: \"#fff\",\n    // width,\n    // minHeight: 0.5 * screen.height,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\n\nfunction connectEvents({\n  room,\n  thisMemberId,\n  memberList,\n  onMemberListUpdate,\n  onRoomUpdate,\n  eventLogger\n}) {\n  room.on(\"room.joined\", async (e) => {\n    thisMemberId.current = e.member_id;\n    memberList.current = e.room.members;\n    let thisMember = memberList.current.find((m) => m.id === e.member_id);\n\n    onRoomUpdate({ thisMemberId: e.member_id, member: thisMember });\n    onMemberListUpdate(e.room.members);\n    console.log(e.room.members);\n    eventLogger(\"You have joined the room.\");\n  });\n  room.on(\"room.updated\", async (e) => {\n    eventLogger(\"Room has been updated\");\n  });\n  room.on(\"member.joined\", async (e) => {\n    eventLogger(e.member.name + \" has joined the room.\");\n    memberList.current.push(e.member);\n    console.log(memberList.current);\n    onMemberListUpdate(memberList.current);\n  });\n  room.on(\"member.updated\", async (e) => {\n    let updatedMember = memberList.current.find((x) => x.id === e.member.id);\n\n    if (updatedMember === undefined) return;\n    updatedMember = { ...updatedMember, ...e.member };\n\n    let newMemberList = memberList.current.filter((x) => x.id !== e.member.id);\n    newMemberList.push(updatedMember);\n    memberList.current = newMemberList;\n\n    onMemberListUpdate([...memberList.current]);\n  });\n  room.on(\"layout.changed\", async (e) => {\n    onRoomUpdate({ layout: e.layout.name });\n  });\n\n  room.on(\"member.left\", async (e) => {\n    let memberThatLeft = memberList.current.find((m) => m.id === e.member.id);\n    let remainingMembers = memberList.current.filter(\n      (m) => m.id !== e.member.id\n    );\n\n    if (memberThatLeft === undefined) return;\n    eventLogger(memberThatLeft?.name + \" has left the room.\");\n\n    if (thisMemberId.current === memberThatLeft?.id) {\n      console.log(\"It is you who has left the room\");\n      onRoomUpdate({ left: true });\n    }\n\n    memberList.current = remainingMembers;\n    onMemberListUpdate(memberList.current);\n    console.log(memberList.current);\n  });\n}\n\nasync function connectDeviceWatchers({ onRoomUpdate, eventLogger }) {\n  let camChangeWatcher = await SignalWire.WebRTC.createDeviceWatcher({\n    targets: [\"camera\"]\n  });\n  camChangeWatcher.on(\"changed\", (changes) => {\n    eventLogger(\"The list of camera devices has changed\");\n    onRoomUpdate({ cameras: changes.devices });\n  });\n  let micChangeWatcher = await SignalWire.WebRTC.createDeviceWatcher({\n    targets: [\"microphone\"]\n  });\n  micChangeWatcher.on(\"changed\", (changes) => {\n    eventLogger(\"The list of microphone devices has changed\");\n    onRoomUpdate({ microphones: changes.devices });\n  });\n  let speakerChangeWatcher = await SignalWire.WebRTC.createDeviceWatcher({\n    targets: [\"speaker\"]\n  });\n  speakerChangeWatcher.on(\"changed\", (changes) => {\n    eventLogger(\"The list of speakers has changed\");\n    onRoomUpdate({ speakers: changes.devices });\n  });\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function Select({\n  items = [],\n  placeholder = \"Select from below\",\n  onChange = () => {},\n  value,\n}) {\n  return (\n    <>\n      <Form.Select\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n        value={value}\n      >\n        <option>{placeholder}</option>\n        {items.map((i) => {\n          if (typeof i === \"object\")\n            return (\n              <option key={i.value} value={i.value}>\n                {i.name}\n              </option>\n            );\n          return (\n            <option key={i} value={i}>\n              {i}\n            </option>\n          );\n        })}\n      </Form.Select>\n    </>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport Toast from \"react-bootstrap/Toast\";\n\nexport default function Events({ log = {} }) {\n  let [logQueue, setLogQueue] = useState([]);\n  let counter = useRef(0);\n  useEffect(() => {\n    if (log === null) return;\n    console.log(\"Got log \", log);\n    setLogQueue((l) => [\n      ...l,\n      {\n        index: counter.current,\n        title: log.title,\n        text: log.text,\n        variant: log.variant\n      }\n    ]);\n    counter.current += 1;\n  }, [log]);\n  return (\n    <ToastContainer\n      position=\"top-end\"\n      className=\"m-1\"\n      style={{ zIndex: \"100000\" }}\n    >\n      {logQueue.map((l) => (\n        <Toast\n          key={l.index}\n          autohide\n          delay={4000}\n          onClose={(e) => {\n            console.log(\"Closing Event index\", l.index);\n            setLogQueue((logQueue) =>\n              logQueue.filter((m) => m.index !== l.index)\n            );\n          }}\n          className=\"m-1\"\n          bg={l.variant ?? l.variant}\n        >\n          <Toast.Header>{l.title ?? \"Event\"}</Toast.Header>\n          <Toast.Body>{l.text}</Toast.Body>\n        </Toast>\n      ))}\n    </ToastContainer>\n  );\n}\n","import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nexport default function InviteButton({\n  room = \"room\",\n  mod,\n  eventLogger = (msg) => {\n    console.log(\"InviteEvent\", msg);\n  },\n}) {\n  function generateLink(r, type = \"normal\") {\n    if (type === \"normal\")\n      return (\n        window.location.protocol +\n        \"//\" +\n        window.location.host +\n        \"/invite?r=\" +\n        r\n      );\n    else if (type === \"mod\") return generateLink(r) + \"&m=mod\";\n  }\n\n  return (\n    <>\n      <Dropdown drop=\"up\">\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          Invite\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Header>As guest</Dropdown.Header>\n          <Dropdown.Item\n            onClick={() => {\n              let tx = document.createElement(\"textarea\");\n              document.body.appendChild(tx);\n              tx.value = generateLink(room);\n              tx.select();\n              document.execCommand(\"copy\");\n              document.body.removeChild(tx);\n              // setShowCopiedToast(true);\n              eventLogger(\n                \"The link \" + generateLink(room) + \" copied to clipboard.\",\n                \"Link copied\",\n                \"info\"\n              );\n            }}\n          >\n            {generateLink(room)}\n          </Dropdown.Item>\n          {mod && (\n            <>\n              <Dropdown.Header>As moderator</Dropdown.Header>\n              <Dropdown.Item\n                onClick={() => {\n                  let tx = document.createElement(\"textarea\");\n                  document.body.appendChild(tx);\n                  tx.value = generateLink(room, \"mod\");\n                  tx.select();\n                  document.execCommand(\"copy\");\n                  document.body.removeChild(tx);\n                  // setShowCopiedToast(true);\n                  eventLogger(\n                    \"The link \" +\n                      generateLink(room, \"mod\") +\n                      \" copied to clipboard.\",\n                    \"Link copied\",\n                    \"info\"\n                  );\n                }}\n              >\n                {generateLink(room, \"mod\")}\n              </Dropdown.Item>\n            </>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport {\n  MdCallEnd,\n  MdMic,\n  MdMicOff,\n  MdVideocam,\n  MdVideocamOff,\n} from \"react-icons/md\";\n\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function Participants({\n  memberList,\n  onMemberUpdate = () => {},\n  mod = false,\n}) {\n  if (!mod)\n    return (\n      <Card>\n        <Card.Header>Participants</Card.Header>\n        {memberList.map((member) => (\n          <ListGroup.Item key={member.id}>{member.name + \" \"}</ListGroup.Item>\n        ))}\n      </Card>\n    );\n\n  return (\n    <Card style={{ width: \"100%\" }}>\n      <Card.Header>Participants</Card.Header>\n      <ListGroup variant=\"flush\">\n        {memberList.map((member) => (\n          <ListGroup.Item key={member.id} style={{ padding: \"2px 0\" }}>\n            <Container>\n              <Row>\n                <Col\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {member.name + \" \"}\n                </Col>\n\n                <Col md=\"auto\">\n                  <OverlayTrigger\n                    key={member.id + \"aud\"}\n                    placement=\"bottom\"\n                    overlay={\n                      <Tooltip variant=\"info\">\n                        {member.audio_muted ? \"Unmute Audio\" : \"Mute Audio\"}\n                      </Tooltip>\n                    }\n                  >\n                    <Button\n                      style={{ padding: \"2px 5px\", marginLeft: 1 }}\n                      variant={!member.audio_muted ? \"success\" : \"danger\"}\n                      onClick={() => {\n                        member.audio_muted\n                          ? onMemberUpdate({\n                              action: \"unmute_audio\",\n                              id: member.id,\n                            })\n                          : onMemberUpdate({\n                              action: \"mute_audio\",\n                              id: member.id,\n                            });\n                      }}\n                    >\n                      {member.audio_muted ? <MdMic /> : <MdMicOff />}\n                    </Button>\n                  </OverlayTrigger>\n\n                  <OverlayTrigger\n                    key={member.id + \"vid\"}\n                    placement=\"bottom\"\n                    overlay={\n                      <Tooltip variant=\"info\">\n                        {member.video_muted ? \"Unmute Video\" : \"Mute Video\"}\n                      </Tooltip>\n                    }\n                  >\n                    <Button\n                      style={{ padding: \"2px 5px\", marginLeft: 1 }}\n                      variant={!member.video_muted ? \"success\" : \"danger\"}\n                      onClick={() => {\n                        member.video_muted\n                          ? onMemberUpdate({\n                              action: \"unmute_video\",\n                              id: member.id,\n                            })\n                          : onMemberUpdate({\n                              action: \"mute_video\",\n                              id: member.id,\n                            });\n                      }}\n                    >\n                      {member.video_muted ? <MdVideocam /> : <MdVideocamOff />}\n                    </Button>\n                  </OverlayTrigger>\n\n                  <OverlayTrigger\n                    key={member.id}\n                    placement=\"bottom\"\n                    overlay={<Tooltip variant=\"info\">Remove Member</Tooltip>}\n                  >\n                    <Button\n                      style={{ padding: \"2px 5px\", marginLeft: 1 }}\n                      variant=\"danger\"\n                      onClick={() => {\n                        onMemberUpdate({ action: \"remove\", id: member.id });\n                      }}\n                    >\n                      <MdCallEnd />\n                    </Button>\n                  </OverlayTrigger>\n                </Col>\n              </Row>\n            </Container>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n}\n","import Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nexport default function SplitButtonMenu({\n  muted = false,\n  setMuted = () => {},\n  muteIcon = () => <></>,\n  unmuteIcon = () => <></>,\n  deviceName = \"device\",\n  devices = [],\n  pickDevice = () => {},\n}) {\n  return (\n    <Dropdown drop=\"up\" as={ButtonGroup}>\n      <Button\n        variant={muted ? \"danger\" : \"success\"}\n        onClick={async () => {\n          if (muted) {\n            setMuted(false);\n          } else {\n            setMuted(true);\n          }\n        }}\n      >\n        {muted ? unmuteIcon() : muteIcon()}\n      </Button>\n\n      <Dropdown.Toggle\n        split\n        variant={muted ? \"danger\" : \"success\"}\n        id=\"dropdown-split-basic\"\n      />\n\n      <Dropdown.Menu>\n        <Dropdown.Header>Select {deviceName}</Dropdown.Header>\n        {devices.map((c) => (\n          <Dropdown.Item\n            key={c.deviceId}\n            onClick={() => {\n              pickDevice(c.deviceId);\n            }}\n          >\n            {c.label}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Video from \"../components/Video\";\nimport Select from \"../components/Select\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Events from \"../components/Events\";\nimport InviteButton from \"../components/Invite.js\";\nimport Participants from \"../components/Partcipants\";\nimport NavBar from \"react-bootstrap/Navbar\";\nimport {\n  MdMic,\n  MdMicOff,\n  MdVideocam as VideocamIcon,\n  MdVideocamOff,\n  MdVolumeOff,\n  MdVolumeUp\n} from \"react-icons/md\";\n\nimport { useHistory } from \"react-router\";\nimport SplitButtonMenu from \"../components/SplitButton.js\";\nimport useScreenSize from \"use-screen-size\";\n\nexport default function InCall({ roomDetails }) {\n  let size = useScreenSize();\n  console.log(size.width);\n  let history = useHistory();\n  let [layouts, setLayouts] = useState([]);\n  let [curLayout, setCurLayout] = useState();\n\n  let [cameras, setCameras] = useState([]);\n  let [microphones, setMicrophones] = useState([]);\n  let [speakers, setSpeakers] = useState([]);\n\n  let [room, setRoom] = useState({});\n  let [screenShareObj, setScreenShareObj] = useState(undefined);\n  let [event, setEvent] = useState(null);\n  let [thisMemberId, setThisMemberId] = useState(null);\n\n  let [audioMuted, setAudioMuted] = useState(false);\n  let [videoMuted, setVideoMuted] = useState(false);\n  let [speakerMuted, setSpeakerMuted] = useState(false);\n\n  let [memberList, setMemberList] = useState([\n    { id: 1, name: \"test user 1\" },\n    { id: 2, name: \"test user 2\" }\n  ]); // TODO\n\n  let [, setUpdateSignal] = useState(true);\n  const updateView = () => setUpdateSignal((x) => !x);\n\n  let logEvent = useCallback((msg, title, variant) => {\n    console.log(\"Displaying toast for\", msg, title, variant);\n    setEvent({ text: msg, title, variant });\n  }, []);\n  let onRoomInit = useCallback(\n    (room, layouts, cameras, microphones, speakers) => {\n      setLayouts(layouts);\n      setCameras(cameras);\n      setMicrophones(microphones);\n      setSpeakers(speakers);\n      setRoom(room);\n    },\n    []\n  );\n  let onRoomUpdate = useCallback(\n    (updatedValues) => {\n      if (updatedValues.cameras !== undefined)\n        setCameras(updatedValues.cameras);\n      if (updatedValues.speakers !== undefined)\n        setSpeakers(updatedValues.speakers);\n      if (updatedValues.microphones !== undefined)\n        setMicrophones(updatedValues.microphones);\n      if (updatedValues.left === true) history.push(\"/\");\n      if (updatedValues.thisMemberId !== undefined)\n        setThisMemberId(updatedValues.thisMemberId);\n      if (updatedValues.layout !== undefined)\n        setCurLayout(updatedValues.layout);\n      if (updatedValues.member !== undefined) {\n        let mem = updatedValues.member;\n        console.log(\"Current User\", mem);\n        setAudioMuted(mem.audio_muted);\n        setVideoMuted(mem.video_muted);\n        setSpeakerMuted(mem.deaf);\n      }\n    },\n    [history]\n  );\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"mt-3\">\n          <Col\n            style={{ backgroundColor: \"black\" }}\n            className=\"justify-content-md-center\"\n            sm=\"auto\"\n            xs=\"auto\"\n          >\n            {roomDetails.mod ? \"Moderator\" : \"normal uwer\"}\n            <Video\n              onRoomInit={onRoomInit}\n              onRoomUpdate={onRoomUpdate}\n              joinDetails={roomDetails}\n              eventLogger={logEvent}\n              width={0.65 * size.width}\n              onMemberListUpdate={useCallback((list) => {\n                setMemberList(list);\n              }, [])}\n            />\n            <Events log={event} />\n          </Col>\n          <Col className=\"col\">\n            <Participants\n              memberList={memberList}\n              mod={roomDetails.mod}\n              onMemberUpdate={async (event) => {\n                if (event.action === \"remove\") {\n                  console.log(\"Removing Member\", event.id);\n                  await room.removeMember({ memberId: event.id });\n                  console.log(\"Removed member\", event.id);\n                  if (event.id === thisMemberId) history.push(\"/\");\n                } else if (event.action === \"mute_video\") {\n                  await room.videoMute({ memberId: event.id });\n                  if (event.id === thisMemberId) setVideoMuted(true);\n                } else if (event.action === \"mute_audio\") {\n                  await room.audioMute({ memberId: event.id });\n                  if (event.id === thisMemberId) setAudioMuted(true);\n                } else if (event.action === \"unmute_audio\") {\n                  await room.audioUnmute({ memberId: event.id });\n                  if (event.id === thisMemberId) setAudioMuted(false);\n                } else if (event.action === \"unmute_video\") {\n                  await room.videoUnmute({ memberId: event.id });\n                  if (event.id === thisMemberId) setVideoMuted(false);\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </Container>\n\n      <NavBar fixed=\"bottom\">\n        <Container fluid className=\"justify-content-md-center\">\n          <Row>\n            <Col xs=\"auto\" style={{ marginTop: 5 }}>\n              <SplitButtonMenu\n                muted={videoMuted}\n                setMuted={async (value) => {\n                  if (value) {\n                    // #### TODO: mute video\n                    setVideoMuted(true);\n                  } else {\n                    // #### TODO: unmute video\n                    setVideoMuted(false);\n                  }\n                }}\n                deviceName=\"Camera\"\n                devices={cameras}\n                pickDevice={async (id) => {\n                  await room.updateCamera({ deviceId: id });\n                  updateView();\n                }}\n                muteIcon={() => <MdVideocamOff />}\n                unmuteIcon={() => <VideocamIcon />}\n              />\n            </Col>\n\n            <Col xs=\"auto\" style={{ marginTop: 5 }}>\n              <SplitButtonMenu\n                muted={audioMuted}\n                setMuted={async (value) => {\n                  if (value) {\n                    await room.audioMute();\n                    setAudioMuted(true);\n                  } else {\n                    await room.audioUnmute();\n                    setAudioMuted(false);\n                  }\n                }}\n                deviceName=\"Microphone\"\n                devices={microphones}\n                pickDevice={async (id) => {\n                  await room.updateMicrophone({ deviceId: id });\n                  updateView();\n                }}\n                muteIcon={() => <MdMicOff />}\n                unmuteIcon={() => <MdMic />}\n              />\n            </Col>\n\n            <Col xs=\"auto\" style={{ marginTop: 5 }}>\n              <SplitButtonMenu\n                muted={speakerMuted}\n                setMuted={async (value) => {\n                  if (value) {\n                    await room.deaf();\n                    setSpeakerMuted(true);\n                  } else {\n                    await room.undeaf();\n                    setSpeakerMuted(false);\n                  }\n                }}\n                deviceName=\"Speaker\"\n                devices={speakers}\n                pickDevice={async (id) => {\n                  await room.updateSpeaker({ deviceId: id });\n                  updateView();\n                }}\n                muteIcon={() => <MdVolumeOff />}\n                unmuteIcon={() => <MdVolumeUp />}\n              />\n            </Col>\n\n            {roomDetails.mod && (\n              <Col xs=\"auto\" style={{ marginTop: 5 }}>\n                <Select\n                  items={layouts}\n                  placeholder=\"Select Layout\"\n                  value={curLayout}\n                  onChange={async (value) => {\n                    console.log(\"Layout: \", value);\n                    // #### TODO: Set room layout\n                    setCurLayout(value);\n                  }}\n                />\n              </Col>\n            )}\n\n            <Col xs=\"auto\" style={{ marginTop: 5 }}>\n              <InviteButton\n                mod={roomDetails.mod}\n                room={roomDetails.room}\n                eventLogger={logEvent}\n              />\n            </Col>\n            <Col xs=\"auto\" style={{ marginTop: 5 }}>\n              <Button\n                onClick={async () => {\n                  if (screenShareObj === undefined) {\n                    // #### TODO: Create screen share\n                    let sc = null;\n                    setScreenShareObj(sc);\n                  } else {\n                    // #### TODO: Stop screen share\n                    // ...\n                    screenShareObj = undefined;\n                    setScreenShareObj(undefined);\n                  }\n                }}\n              >\n                {screenShareObj === undefined\n                  ? \"Share Screen\"\n                  : \"Turn Off Screen Sharing\"}\n              </Button>\n            </Col>\n            <Col xs=\"auto\" style={{ marginTop: 5 }}>\n              <Button\n                onClick={async () => {\n                  // Leave the room\n                  if (room && room.leave) {\n                    await room.leave();\n                  }\n                  history.push(\"/\");\n                }}\n                variant=\"danger\"\n              >\n                Leave\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </NavBar>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header.js\";\n\nimport {\n  Switch,\n  Route,\n  useHistory,\n  useLocation,\n  Redirect\n} from \"react-router-dom\";\n\nimport JoinCallForm from \"./components/JoinCallForm.js\";\nimport InviteForm from \"./components/InviteForm\";\nimport InCall from \"./pages/InCall.js\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction App() {\n  let query = useQuery();\n  let history = useHistory();\n  let [roomDetails, setRoomDetails] = useState({});\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/in-call\">\n          {roomDetails.name === undefined || roomDetails.room === undefined ? (\n            <Redirect to=\"/\" />\n          ) : (\n            <InCall roomDetails={roomDetails} />\n          )}\n        </Route>\n\n        <Route path=\"/invite\">\n          <InviteForm\n            mod={query.get(\"m\") === \"mod\"}\n            roomName={query.get(\"r\")}\n            onJoin={({ room, name, mod }) => {\n              console.log(name, room, mod);\n              setRoomDetails({ name, room, mod });\n              console.log(history);\n              history.push(\"/in-call\");\n            }}\n          />\n        </Route>\n        <Route path=\"/\">\n          <JoinCallForm\n            onJoin={({ room, name }) => {\n              console.log(name, room);\n              setRoomDetails({ name, room, mod: true });\n              console.log(history);\n              history.push(\"/in-call\");\n            }}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}